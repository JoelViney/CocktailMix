package com.beachrife.cocktailmix.ui;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Toast;

import com.beachrife.cocktailmix.ApplicationEx;
import com.beachrife.cocktailmix.ApplicationSettings;
import com.beachrife.cocktailmix.R;
import com.beachrife.cocktailmix.datalayer.ApplicationSettingsFactory;
import com.beachrife.cocktailmix.datalayer.DataException;
import com.beachrife.cocktailmix.datalayer.DrinkFactory;
import com.beachrife.cocktailmix.datalayer.IngredientFactory;
import com.beachrife.cocktailmix.drinks.Drink;
import com.beachrife.cocktailmix.drinks.DrinkIngredient;
import com.beachrife.cocktailmix.drinks.DrinkList;
import com.beachrife.cocktailmix.drinks.DrinkViewMode;
import com.beachrife.cocktailmix.drinks.Ingredient;
import com.beachrife.cocktailmix.drinks.IngredientList;
import com.beachrife.cocktailmix.helpers.ConsoleHelper;

public class MainActivity extends Activity 
{
	public static String PACKAGE_NAME; // Provides a constant that can be used from other.
	
    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
		try 
		{
	        setContentView(R.layout.main_activity);
	
	        PACKAGE_NAME = getApplicationContext().getPackageName();
	        
	        // Load values from the data layer
	        ConsoleHelper.writeLine("Filling the context...");
	        ApplicationEx context = (ApplicationEx)getApplicationContext();
	
	        IngredientFactory ingredientFactory = new IngredientFactory(context);
	        DrinkFactory drinkFactory = new DrinkFactory(context);
	        ApplicationSettingsFactory settingsFactory = new ApplicationSettingsFactory(context);
	        
	        IngredientList ingredients = ingredientFactory.load();
	        
	        DrinkList drinks = drinkFactory.load(ingredients);
	        drinks.sortByName();
	        
	        ApplicationSettings settings = settingsFactory.load();

	        ConsoleHelper.writeLine("Loaded %s ingredients.", ingredients.size());
	        ConsoleHelper.writeLine("Loaded %s drinks.", drinks.size());
	        
	        // Missing Ingredients sanity check.
	        {
		        List<String> list = new ArrayList<String>();
		        for(Drink drink : drinks)
		        {
		        	for(DrinkIngredient part : drink.getIngredientList())
		        	{
		        		if (!ingredients.hasIngredient(part))
		        		{
		        			if (!list.contains(part.getName()))
		        			{
		        				list.add(part.getName());
		        			}
		        			
		        		}
		        	}
		        }
		        for(String str : list)
		        {
		        	ConsoleHelper.writeLine("Missing Ingredient: %s", str);	        	
		        }
	        }
	        
	        // Un-used ingredients...
	        {
		        List<String> list = new ArrayList<String>();
		        for(Ingredient ingredient : ingredients)
		        {
		        	boolean used = false;
			        for(Drink drink : drinks)
			        {
			        	if (drink.getIngredientList().existsByName(ingredient.getName()))
			        	{
			        		used = true;
			        		break;
			        	}
			        }
		        	
			        if (!used)
			        {
        				list.add(ingredient.getName());
			        }
		        }
		        for(String str : list)
		        {
		        	ConsoleHelper.writeLine("Un-used Ingredient: %s", str);	        	
		        }
	        }
	        

	        context.setDrinks(drinks);
	        context.setIngredients(ingredients);
	        context.setSettings(settings);
	        context.setSelectedDrinkName(null);
		} 
		catch (DataException e)
		{
			e.printStackTrace();
			Toast toast = Toast.makeText(this.getApplicationContext(), e.getMessage(), Toast.LENGTH_LONG);
			toast.show();
		}
    }

    @Override
    public void onResume()
    {
    	super.onResume();

    	// Reset the selected item from the list view. 
        ApplicationEx context = (ApplicationEx)getApplicationContext();
        context.setSelectedDrinkName(null);
    }
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) 
    {
        getMenuInflater().inflate(R.menu.default_menu, menu); // Inflate the menu; this adds items to the action bar if it is present.
        return true;
    }

	@Override
	public boolean onOptionsItemSelected(MenuItem item) 
	{
		switch (item.getItemId()) 
		{
			case R.id.action_settings:
	    	Intent intent = new Intent(this, SettingsActivity.class);
	    	startActivity(intent);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
    public void onClickAllCocktailsButton(View view)
    {
    	Intent intent = new Intent(this, DrinkListActivity.class);
    	intent.putExtra(DrinkListFragment.DRINK_VIEW_MODE_ARGUMENT, DrinkViewMode.toInt(DrinkViewMode.VIEW_ALL));
    	startActivity(intent);
    }
    
    public void onClickMyBarButton(View view)
    { 	
    	Intent intent = new Intent(this, MyBarActivity.class);
    	startActivity(intent);    	
    }
    
    public void onClickMyCocktailsButton(View view)
    {
    	Intent intent = new Intent(this, DrinkListActivity.class);
    	intent.putExtra(DrinkListFragment.DRINK_VIEW_MODE_ARGUMENT, DrinkViewMode.toInt(DrinkViewMode.VIEW_MY_COCKTAILS));
    	startActivity(intent);
    }
    
    public void onClickShoppingButton(View view)
    {
    	Intent intent = new Intent(this, ShoppingActivity.class);
    	intent.putExtra(DrinkListFragment.DRINK_VIEW_MODE_ARGUMENT, DrinkViewMode.toInt(DrinkViewMode.VIEW_BY_BASKET));
    	startActivity(intent);
    }
    
}
